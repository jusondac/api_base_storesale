c
Stock.all
c
Stock.all
c
Stock.all
Order.all
order
Order
c
Product.find(items.first[:product_id]).stock
Product.find(items.first[:product_id])
Product.find(_
items.first[:product_id]
items.first
items
stock
c
product.stock
product = Product.find(items.first[:product_id])
product = Product.find(item.first[:product_id])
product = Product.find(item[:product_id])
product.find(item[:product_id])
c
items
item
c
items.first[:quantity]
items.first
items
c
items
order_params
items
c
items
c
params
c
items
item
c
stock
c
product
c
product
c
@product
c
@product
c
stock = Stock.create(product: product, quantity: params[:quantity])
stock = create(product: product, quantity: params[:quantity])
params
product = Product.create(params)
product
c
response
params
response
request.body
request
response
ap response
ap _
response
c
response.body
response
expect(response).to have_http_status(:unprocessable_entity)
c
JSON.parse(response.body)
response
responce
expect(response).to have_http_status(:unprocessable_entity)
have_http_status(:unprocessable_entity)
response
c
order_params[:order_items]
order_params[]:order_items
order_params
c
order_params[:order_items].nil?
order_params[:order_items].empty?
order_params[:order_items].empty??
order_params[:order_items].nil?
order_params[:order_items]
order_params
c
order_params[:order_items][1]
order_params[:order_items][0]
order_params[:order_items]
order_params
order_items
c
order_params
c
params[:order][:total_prices]
params[:order]
order_params
c
params[:total_prices]
params[:order_items]
params[:order]
params
order_params
order_param
order_items
params
c
params
order_items
params
c
params[:order_items].empty?
params[:order_items].nil?
params[:order_items]
params[:order_items}
params
